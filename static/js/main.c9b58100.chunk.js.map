{"version":3,"sources":["react-logo.png","serviceWorker.js","components/dateJS.js","components/nav.js","components/hoc/Auxilliary.js","components/homePage.js","components/notfound.js","components/todolist.js","components/home.js","components/getAPIList.js","components/postAPI.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DateJS","props","currentTime","setInterval","currentHours","Date","setState","toLocaleTimeString","currentHour","getHours","greeting","cssWish","fontWeight","color","toLocaleDateString","style","this","Component","Nav","className","src","logo","alt","exact","activeClassName","to","auxilliary","children","HomePage","NotFound","TodoList","changeHandler","event","item","target","value","clickHandler","prevState","newList","deleteHandler","index","filter","arrElem","i","searchHandler","toLowerCase","li","document","getElementsByClassName","length","innerText","indexOf","display","type","placeholder","onChange","onClick","fontSize","map","itemValue","key","marginLeft","onKeyUp","Home","path","component","Todolist","React","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9b58100.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.47ce6e77.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\n\r\nclass DateJS extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentTime: ''\r\n        }\r\n    }\r\n   \r\n\r\n    // componentDidMount() {\r\n    //     const thisBoundedIncrementer = this.currentTiming.bind(this);\r\n    //     setInterval(thisBoundedIncrementer, 500);\r\n    // }    \r\n\r\n    render() {\r\n        const currentTiming = () => {\r\n            let currentHours = new Date();\r\n            this.setState({\r\n                currentTime: currentHours.toLocaleTimeString()\r\n            });  \r\n        }\r\n        setInterval(currentTiming, 1000);\r\n        let currentHours = new Date();\r\n        let currentHour = currentHours.getHours();\r\n        let greeting = '';\r\n        let cssWish = { fontWeight: '600' };\r\n        if (currentHour >= 1 && currentHour <= 12) {\r\n            greeting = 'Good Morning';\r\n            cssWish.color = 'green';\r\n        } else if (currentHour >= 13 && currentHour <= 18) {\r\n            greeting = 'Good Evening';\r\n            cssWish.color = 'yellow'\r\n        } else {\r\n            greeting = 'Good Night';\r\n            cssWish.color = 'Red';\r\n        }\r\n        return (\r\n            <>\r\n                <span>Date is :: {new Date().toLocaleDateString()}</span> ||\r\n                <span style={cssWish}>&nbsp; {greeting}</span> ||\r\n                <span> Time is:: {this.state.currentTime}</span>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DateJS;","import React, { Component } from 'react';\r\nimport logo from '../react-logo.png';\r\nimport '../mysass.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DateJS from './dateJS';\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nav-bar\">\r\n                <img src={logo} className=\"React-logo\" alt=\"logo\" />\r\n                <DateJS />\r\n                <ul className=\"nav-links\">\r\n                    <li>\r\n                        <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact activeClassName=\"active\" to=\"/todo\">Todoist</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\n//This is the high order function that wraps other component\r\n\r\nconst auxilliary = props => props.children;\r\n\r\nexport default auxilliary;","import React, { Component } from 'react';\r\nimport Aux from './hoc/Auxilliary';\r\n\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <h1>Welcome to Home Page of React</h1>\r\n                <h2>Page is under maintenance</h2>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\n// import withClass from './hoc/withClass';\r\nimport Aux from './hoc/Auxilliary';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <h1>-- Sorry Page Not Found :( --</h1>\r\n                <h2>Enter the correct URL</h2>\r\n            </Aux>                  \r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n// export default withClass(NotFound, classes.NotFound);\r\n","import React, { Component } from 'react';\r\nimport '../mysass.scss';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            newList: []\r\n\r\n        }\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({\r\n            item: event.target.value\r\n        })\r\n    }\r\n    clickHandler = () => {\r\n        if (this.state.item) {\r\n            this.setState(prevState => ({\r\n                newList: [...prevState.newList, this.state.item]\r\n            }))\r\n        }\r\n        this.setState({\r\n            item: ''\r\n        })\r\n    }\r\n\r\n    deleteHandler = (index) => {\r\n        this.setState({\r\n            newList: this.state.newList.filter((arrElem,i) => {\r\n                return i !== index\r\n            })\r\n        })\r\n    }\r\n    searchHandler = (event) => {\r\n\r\n        let value = event.target.value.toLowerCase();\r\n        let li = document.getElementsByClassName('alignment');\r\n        for(let i = 0; i < li.length; i++){\r\n            let itemValue = li[i].innerText\r\n            if(itemValue.toLowerCase().indexOf(value) != -1){\r\n                li[i].style.display = 'list-item';\r\n            } else {\r\n                li[i].style.display = 'none';\r\n            }\r\n        }\r\n        // if(this.state.newList.indexOf(event.target.value.toLowerCase()) != -1){\r\n        //     return this.state.newList[ ]\r\n        // } else {\r\n        \r\n        // }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"todoContainer\">\r\n                <h1>ToDo List</h1>\r\n                <div className=\"inputElement\">\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Add a Items\" onChange={this.changeHandler} value={this.state.item} />\r\n                    </div>\r\n                    <div className=\"plusIcon\" onClick={this.clickHandler}>\r\n                        <AddCircleOutlineIcon style={{ fontSize: 40 }} />\r\n                    </div>\r\n                </div>\r\n                <ol>\r\n                    {\r\n                        this.state.newList.map((itemValue, index) => {\r\n                            return (\r\n                                <li key={index} className=\"alignment\">{itemValue}\r\n                                    <div style={{ display: 'inline-block', marginLeft: '20px' }}>\r\n                                        <DeleteIcon onClick={() => { this.deleteHandler(index) }} />\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ol>\r\n                <div className=\"search\">\r\n                        <input type=\"text\" placeholder=\"Search\" onKeyUp={this.searchHandler}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoList;","import React from 'react';\r\nimport Nav from './nav';\r\nimport HomePage from './homePage';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport NotFound from './notfound';\r\nimport Todolist from './todolist';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={HomePage} />\r\n                    <Route exact path=\"/todo\" component={Todolist} />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass GetList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            posts: [],\r\n            errMessage: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({ posts: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({errMessage: 'Error in retrieving the data'})\r\n            })\r\n    }\r\n    render() {\r\n        const { posts, errMessage } = this.state;\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                List of Posts\r\n                {\r\n                    posts.length ?\r\n                    posts.map(post => <div key={post.id}>{post.title}</div>) : null\r\n                }\r\n                {\r\n                    errMessage ? <div>{errMessage}</div> : null\r\n                }\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default GetList;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass PostList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n           userId: '',\r\n           title: '',\r\n           body: ''\r\n        }\r\n    }\r\n    // state = {\r\n    //     userId: '',\r\n    //     title: '',\r\n    //     body: ''\r\n    //  }\r\n    \r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        axios.post('https://jsonplaceholder.typicode.com/posts', this.state)\r\n        .then(response =>{console.log(response)})\r\n        .catch(err =>{console.log(err)})\r\n    }\r\n    render() {\r\n        const { userId, title, body} = this.state;\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <div>\r\n                        <input type=\"text\"  name=\"userId\" value={userId} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\"  name=\"title\" value={title} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\"  name=\"body\" value={body} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './components/home';\nimport GetList from './components/getAPIList';\nimport PostList from './components/postAPI';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n// registerServiceWorker();"],"sourceRoot":""}